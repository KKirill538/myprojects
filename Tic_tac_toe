X = "X"
O = "O"
EMPTY = " "
TIE = "tie"
NUM_SQUARES = 9


def display_instruct():
    print("""This is tic tac toe game.
    to make a move enter the number from 0 to 8
        0 | 1 | 2
       -----------
        3 | 4 | 5
       -----------
        6 | 7 | 8
        """)


def ask_question(question):
    response = None
    while response not in ("y", "n"):
        response = input(question).lower()
    return response


def ask_number(question, low, high):
    response = None
    while response not in range(low, high):
        response = int(input(question).lower())
    return response


def pieces():
    first_move = ask_question("go you want to go first?(y/n):")
    if first_move == "y":
        print("You go first")
        human = X
        computer = O
    else:
        print("I go first")
        human = O
        computer = X
    return computer, human


def new_board():
    board = [EMPTY for square in range(NUM_SQUARES)]
    return board


def display_board(board):
    print(f"\n\t{board[0]} | {board[1]} | {board[2]}")
    print("\t----------")
    print(f"\t{board[3]} | {board[4]} | {board[5]}")
    print("\t----------")
    print(f"\t{board[6]} | {board[7]} | {board[8]}")


def legal_moves(board):
    moves = [square for square in range(NUM_SQUARES) if board[square] == EMPTY]
    return moves


def winner(board):
    ways_to_win = ((0, 1, 2),
                   (3, 4, 5),
                   (6, 7, 8),
                   (0, 3, 6),
                   (1, 4, 7),
                   (2, 5, 8),
                   (0, 4, 8),
                   (2, 4, 6))
    for row in ways_to_win:
        if board[row[0]] == board[row[1]] == board[row[2]]!= EMPTY:
            winner = board[row[0]]
            return winner
        if EMPTY not in board:
            return TIE
    return None


def human_move(board, human):
    legal = legal_moves(board)
    move = None
    while move not in legal:
        move = ask_number("Your move. Chose a number from 0 to 8:", 0, NUM_SQUARES)
        if move not in legal:
            print("wrong move")
    return move


def computer_move(board, human, computer):
    board = board[:]
    best_moves = (4, 0, 2, 6, 8, 1, 3, 5, 7)
    print("i will choose", end=" ")
    for move in legal_moves(board):
        board[move] = computer
        if winner(board) == computer:
            print(move)
            return move
        board[move] = EMPTY
    for move in legal_moves(board):
        board[move] = human
        if winner(board) == human:
            print(move)
            return move
        board[move] = EMPTY
    for move in best_moves:
        if move in legal_moves(board):
            print(move)
            return move


def next_turn(turn):
    if turn == X:
        return O
    else:
        return X


def congrats_winner(the_winner, computer, human):
    if the_winner != TIE:
        print(f"3 {the_winner} in row\n")
    else:
        print("TIE")
    if the_winner == computer:
        print("computer won")
    elif the_winner == human:
        print("human won")
    elif the_winner == TIE:
        print(TIE)


def tic_tac_toe():
    display_instruct()
    computer, human = pieces()
    turn = X
    board = new_board()
    display_board(board)
    while not winner(board):
        if turn == human:
            move = human_move(board, human)
            board[move] = human
        else:
            move = computer_move(board, computer, human)
            board[move] = computer
        display_board(board)
        turn = next_turn(turn)
    the_winner = winner(board)
    congrats_winner(the_winner, computer, human)


tic_tac_toe()
